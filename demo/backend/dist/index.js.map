{
  "version": 3,
  "sources": ["<define:__slib_info>", "../../../node_modules/@randajan/simple-lib/src/tools/logger.js", "../../../node_modules/@randajan/simple-lib/src/info/index.js", "../../../node_modules/@randajan/simple-lib/src/node/index.js", "../src/index.js", "../src/http.js"],
  "sourcesContent": ["", "import chalkNative from \"chalk\";\r\n\r\nconst chalkProps = Object.getOwnPropertyNames(Object.getPrototypeOf(chalkNative)).filter(v=>v!==\"constructor\");\r\n\r\nclass Logger extends Function {\r\n    constructor(formater, chalkInit) {\r\n        super();\r\n        const chalk = chalkInit||chalkNative;\r\n\r\n        const log = (...msgs)=>{ console.log(chalk(formater(msgs))); }\r\n        const self = Object.setPrototypeOf(log.bind(), new.target.prototype);\r\n\r\n        for (const prop of chalkProps) {\r\n            Object.defineProperty(self, prop, { get: _=>new Logger(formater, chalk[prop]), enumerable:false });\r\n        }\r\n        \r\n        return self;\r\n    }\r\n}\r\n\r\nexport const logger = (...prefixes)=>{\r\n    const now = _=>(new Date()).toLocaleTimeString(\"cs-CZ\");\r\n    prefixes = prefixes.filter(v=>!!v).join(\" \");\r\n\r\n    return new Logger(msgs=>`${prefixes} | ${now()} | ${msgs.join(\" \")}`);\r\n}", "const enumerable = true;\r\nconst lockObject = o=>{\r\n    if (typeof o !== \"object\") { return o; }\r\n\r\n    const r = {};\r\n    for (const i in o) {\r\n        const descriptor = { enumerable };\r\n        let val = o[i];\r\n        if (val instanceof Array) { descriptor.get = _=>[...val]; }\r\n        else { descriptor.value = lockObject(val); }\r\n        Object.defineProperty(r, i, descriptor);\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport const info = lockObject(__slib_info);\r\nexport default info;", "import { parentPort } from \"worker_threads\";\r\nimport { info } from \"../info\";\r\nimport { logger } from \"../tools/logger\";\r\n\r\nexport default info;\r\n\r\nexport const log = logger(info.name, info.version, info.env);\r\n\r\nexport {\r\n    info,\r\n}\r\n\r\nparentPort.on(\"message\", msg=>{\r\n    if (msg===\"shutdown\") { process.exit(0); }\r\n});\r\n\r\nprocess.on('uncaughtException', e=>{\r\n  console.log(e.stack);\r\n});", "\nimport { info } from \"@randajan/simple-lib/node\";\n\nimport { BifrostRouter } from \"@randajan/bifrost/server\";\nimport { io } from \"./http\";\nimport fs from \"fs-extra\";\n\nlet records = fs.readJsonSync(\"demo/_data/db.json\");\n\nconst bifrost = new BifrostRouter(io);\n\nbifrost.createBeam(\"data\", {\n    get:_=>records,\n    set:data=>{\n        fs.writeJsonSync(\"demo/_data/db.json\", data);\n        return records = data;\n    }\n});", "\r\nimport { info } from \"@randajan/simple-lib/node\";\r\n\r\nimport { createServer as createServerHTTP } from \"http\";\r\nimport { Server as IO } from \"socket.io\";\r\n\r\n\r\n//Create simple server\r\nconst http = createServerHTTP();\r\nhttp.listen(info.port+1);\r\n\r\n//Register Socket.io API\r\nexport const io = new IO(http, {\r\n    cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"]\r\n      }\r\n});"],
  "mappings": ";AAAA,iCAAC,UAAW,MAAK,SAAU,OAAM,MAAO,oBAAmB,aAAc,qBAAoB,SAAU,SAAQ,QAAS,EAAC,MAAO,aAAY,OAAQ,qBAAoB,KAAM,wCAAuC,GAAE,KAAM,eAAc,MAAO,QAAO,MAAO,MAAK,KAAM,EAAC,MAAO,wBAAuB,MAAO,oBAAmB,EAAC;;;ACArU,OAAO,iBAAiB;AAExB,IAAM,aAAa,OAAO,oBAAoB,OAAO,eAAe,WAAW,CAAC,EAAE,OAAO,CAAA,MAAG,MAAI,aAAa;AAE7G,IAAM,SAAN,cAAqB,SAAS;EAC1B,YAAY,UAAU,WAAW;AAC7B,UAAM;AACN,UAAM,QAAQ,aAAW;AAEzB,UAAMA,OAAM,IAAI,SAAO;AAAE,cAAQ,IAAI,MAAM,SAAS,IAAI,CAAC,CAAC;IAAG;AAC7D,UAAM,OAAO,OAAO,eAAeA,KAAI,KAAK,GAAG,WAAW,SAAS;AAEnE,eAAW,QAAQ,YAAY;AAC3B,aAAO,eAAe,MAAM,MAAM,EAAE,KAAK,CAAA,MAAG,IAAI,OAAO,UAAU,MAAM,IAAI,CAAC,GAAG,YAAW,MAAM,CAAC;IACrG;AAEA,WAAO;EACX;AACJ;AAEO,IAAM,SAAS,IAAI,aAAW;AACjC,QAAM,MAAM,CAAA,MAAI,IAAI,KAAK,EAAG,mBAAmB,OAAO;AACtD,aAAW,SAAS,OAAO,CAAA,MAAG,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG;AAE3C,SAAO,IAAI,OAAO,CAAA,SAAM,GAAG,cAAc,IAAI,OAAO,KAAK,KAAK,GAAG,GAAG;AACxE;;;ACzBA,IAAM,aAAa;AACnB,IAAM,aAAa,CAAA,MAAG;AAClB,MAAI,OAAO,MAAM,UAAU;AAAE,WAAO;EAAG;AAEvC,QAAM,IAAI,CAAC;AACX,aAAW,KAAK,GAAG;AACf,UAAM,aAAa,EAAE,WAAW;AAChC,QAAI,MAAM,EAAE,CAAC;AACb,QAAI,eAAe,OAAO;AAAE,iBAAW,MAAM,CAAA,MAAG,CAAC,GAAG,GAAG;IAAG,OACrD;AAAE,iBAAW,QAAQ,WAAW,GAAG;IAAG;AAC3C,WAAO,eAAe,GAAG,GAAG,UAAU;EAC1C;AAEA,SAAO;AACX;AAEO,IAAM,OAAO,WAAW,wBAAW;;;AChB1C,SAAS,kBAAkB;AAMpB,IAAM,MAAM,OAAO,KAAK,MAAM,KAAK,SAAS,KAAK,GAAG;AAM3D,WAAW,GAAG,WAAW,CAAA,QAAK;AAC1B,MAAI,QAAM,YAAY;AAAE,YAAQ,KAAK,CAAC;EAAG;AAC7C,CAAC;AAED,QAAQ,GAAG,qBAAqB,CAAA,MAAG;AACjC,UAAQ,IAAI,EAAE,KAAK;AACrB,CAAC;;;ACfD,SAAS,qBAAqB;;;ACA9B,SAAS,gBAAgB,wBAAwB;AACjD,SAAS,UAAU,UAAU;AAI7B,IAAM,OAAO,iBAAiB;AAC9B,KAAK,OAAO,KAAK,OAAK,CAAC;AAGhB,IAAM,KAAK,IAAI,GAAG,MAAM;AAAA,EAC3B,MAAM;AAAA,IACF,QAAQ;AAAA,IACR,SAAS,CAAC,OAAO,MAAM;AAAA,EACzB;AACN,CAAC;;;ADZD,OAAO,QAAQ;AAEf,IAAI,UAAU,GAAG,aAAa,oBAAoB;AAElD,IAAM,UAAU,IAAI,cAAc,EAAE;AAEpC,QAAQ,WAAW,QAAQ;AAAA,EACvB,KAAI,OAAG;AAAA,EACP,KAAI,UAAM;AACN,OAAG,cAAc,sBAAsB,IAAI;AAC3C,WAAO,UAAU;AAAA,EACrB;AACJ,CAAC;",
  "names": ["log"]
}
